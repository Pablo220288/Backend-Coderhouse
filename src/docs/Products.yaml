paths:
  /mongoose/products/:
    get:
      summary: 'return all products'
      tags:
        - Products
      responses:
        '200':
          description: 'successful query'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Product'
        '500':
          description: 'server error when querying'
    post:
      summary: create new product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/Post'
      responses:
        '200':
          description: 'product created successfully'
          content:
            application/json:
              schema:
                type: object
                $ref: '#components/schemas/Product'
        '404':
          description: 'required data in missing'
        '500':
          description: 'server error when creating new product'
    put:
      summary: 'update product by ID'
      tags:
        - Products
      parameters:
        - name: uid
          in: path
          required: true
          description: product ID to update
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/Post'
      responses:
        '200':
          description: 'product updated successfully'
        '404':
          description: 'product not found'
        '500':
          description: 'server error deleting'
    delete:
      summary: 'remove product by ID'
      tags:
        - Products
      parameters:
        - name: uid
          in: path
          required: true
          description: product ID to delete
          schema:
            $type: String
      responses:
        '200':
          description: 'product removed successfully'
        '404':
          description: 'product not found'
        '500':
          description: 'server error deleting'
  /mongoose/products/{uid}:
    get:
      summary: 'return product by ID'
      tags:
        - Products
      parameters:
        - name: uid
          in: path
          required: true
          description: Id product
          schema:
            $type: String
      responses:
        '200':
          description: 'successful query'
          content:
            application/json:
              schema:
                type: object
                $ref: '#components/schemas/Product'
        '404':
          description: 'product not found'
        '500':
          description: 'server error when querying'
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerated
        title:
          type: String
          description: product title
        author:
          type: String
          description: product author
        description:
          type: String
          description: product description
        price:
          type: String
          description: product price
        status:
          type: String
          description: product availability
        category:
          type: String
          description: product category
        thumbnail:
          type: String
          description: product image url
        code:
          type: String
          description: prodyct code
        stock:
          type: String
          description: product stock
        owner:
          type: Array
          description: autogenerated creator ID
      required:
        - title
        - author
        - description
        - price
        - status
        - category
        - code
        - stock
      example:
        _id: ObjectId('640675c34d14e645df804cbd')
        owner: [{ _id: ObjectId('640675c34d14e645df804cba') }]
        title: Sentido y Sensibilidad
        author: Jane Austen
        description: Libro Romance
        price: 2800
        status: true
        category: Romance
        thumbnail: https://global-uploads.webflow.com/6034d7d1f3e0f52c50b2adee/62ac6f2dfcc47a33f8701adf_6034d7d1f3e0f5c12ab2b2e0_978841743064120PersuasiC3B3n20J.20Austen_1.jpeg
        code: abc124
        stock: 10
    Post:
      type: object
      properties:
        title:
          type: String
          description: product title
        author:
          type: String
          description: product author
        description:
          type: String
          description: product description
        price:
          type: String
          description: product price
        status:
          type: String
          description: product availability
        category:
          type: String
          description: product category
        thumbnail:
          type: String
          description: product image url
        code:
          type: String
          description: product code
        stock:
          type: String
          description: product stock
      required:
        - title
        - author
        - description
        - price
        - status
        - category
        - code
        - stock
      example:
        title: Sentido y Sensibilidad
        author: Jane Austen
        description: Libro Romance
        price: 2800
        status: true
        category: Romance
        thumbnail: https://global-uploads.webflow.com/6034d7d1f3e0f52c50b2adee/62ac6f2dfcc47a33f8701adf_6034d7d1f3e0f5c12ab2b2e0_978841743064120PersuasiC3B3n20J.20Austen_1.jpeg
        code: abc124
        stock: 10
