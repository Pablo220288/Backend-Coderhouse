paths:
  /mongoose/carts/:
    get:
      summary: 'return all cartss'
      tags:
        - Carts
      responses:
        '200':
          description: 'successful query'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
        '500':
          description: 'server error when querying'
    post:
      summary: create new cart
      tags:
        - Carts
      responses:
        '200':
          description: 'cart created successfully'
          content:
            application/json:
              schema:
                type: object
                $ref: '#components/schemas/Cart'
        '500':
          description: 'server error when creating new cart'
    put:
      summary: 'update cart by ID'
      tags:
        - Carts
      parameters:
        - name: uid
          in: path
          required: true
          description: cart ID to update
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/Cart'
      responses:
        '200':
          description: 'cart updated successfully'
        '404':
          description: 'cart not found'
        '500':
          description: 'server error deleting'
    delete:
      summary: 'remove cart by ID'
      tags:
        - Carts
      parameters:
        - name: uid
          in: path
          required: true
          description: cart ID to delete
          schema:
            $type: String
      responses:
        '200':
          description: 'cart removed successfully'
        '404':
          description: 'cart not found'
        '500':
          description: 'server error deleting'
  /mongoose/carts/{uid}:
    get:
      summary: 'return cart by ID'
      tags:
        - Carts
      parameters:
        - name: uid
          in: path
          required: true
          description: Id cart
          schema:
            $type: String
      responses:
        '200':
          description: 'successful query'
          content:
            application/json:
              schema:
                type: object
                $ref: '#components/schemas/Cart'
        '404':
          description: 'cart not found'
        '500':
          description: 'server error when querying'
components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerated
        products:
          type: array
          description: products in cart
      example:
        _id: ObjectId('640675c34d14e645df804cbd')
        products: [{ _id: ObjectId('640675c34d14e645df804cba') }]
